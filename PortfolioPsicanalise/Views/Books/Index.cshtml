@model IEnumerable<BooksModel>;


@{
    ViewData["Title"] = "Books";
}


<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-5">
        <h1>@ViewData["Title"]</h1>
        <a  class="btn btn-success mx-2" asp-controller="Books" asp-action="AddBook"><i class="bi bi-plus-circle"></i> New Book</a>
    </div>

    @if (TempData["SuccessfulAction"] != null)
    {
        <div class="alert alert-success text-dark" role="alert">
            @TempData["SuccessfulAction"]
        </div>
    }

<table id="Books" class="table table-light table-hover mt-5">
    <thead>

        <tr>
            <th scope="col" class="text-center">Book</th>
            <th scope="col" class="text-center">Author</th>
            <th scope="col" class="text-center">Field</th>
            <th scope="col" class="text-center">Last Update</th>
            <th></th>
        </tr>

    </thead>
    <tbody>

        @if (Model != null)
        {
            @foreach (var book in Model)
            {
                        <tr class="text-center">
                            <th scope="row">@book.Book</th>
                            <td>@book.AuthorName</td>
                            <td>@book.Field</td>
                            <td>@Html.DisplayFor(modelbook => book.Date)</td>
                            <td>
                                        <a asp-controller ="Books" asp-action="EditBook" asp-route-id="@book.Id" class="btn btn-warning mx-2"><i class="bi bi-pencil-square"></i> Edit</a>
                                        <a asp-controller ="Books" asp-action="DeleteBook" asp-route-id="@book.Id" class="btn btn-danger mx-2"><i class="bi bi-trash3"></i> Delete</a>
                            </td>
                        </tr>
            }
        }


    </tbody>

</table>
</div>
  

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

